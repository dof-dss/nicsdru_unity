<?php

/**
 * @file
 * Custom code for search pages.
 */

/**
 * Implements hook_preprocess_views_view() for views_view.
 *
 * Adding a singular/pluralised result count in the header of the search pages.
 *
 * @RenderElement("html_tag");
 */
function unity_search_pages_preprocess_views_view(array &$variables) {
  // Add view display ids to add result count to header of the search view.
  $display_ids = ['publication_search_page',
    'news_search_page',
    'consultations_search_page',
    'evidence_search_page',
    'search_page',
  ];

  foreach ($display_ids as $display_id) {
    if ($variables['display_id'] == $display_id) {
      // Ensure the search has items in an array.
      if (!empty($variables['view']->total_rows)) {

        // Count the number of items in the array.
        $number_of_items = $variables['view']->total_rows;

        // Singular expression if only 1, if more pluralise.
        $header_text = \Drupal::translation()->formatPlural($number_of_items, 'result', 'results');

        // Output the result.
        $variables['header']['result'] = [
          '#type' => 'html_tag',
          '#tag' => 'h2',
          '#attributes' => ['class' => 'current-search-item-results-count'],
          '#value' => t('@item_count @header_text',
            [
              '@item_count' => $number_of_items,
              '@header_text' => $header_text,
            ]),
        ];
      }
      else {
        $variables['header']['result'] = [
          '#type' => 'html_tag',
          '#tag' => 'h2',
          '#attributes' => ['class' => 'current-search-item-results-count'],
          '#value' => t('0 results'),
        ];
      }
    }
  }
}

/**
 * Implements hook_preprocess_page().
 */
function unity_search_pages_preprocess_page(&$variables) {
  // A list of search page titles on the Unity codebase.
  $search_pages = [
    'Search',
  ];

  $variables['search_page'] = in_array($variables['page']['#title'], $search_pages);

}

/**
 * Implements hook_preprocess_page_title().
 *
 * Replaces search results title with a title and subtitle to enable styling.
 */
function unity_search_pages_preprocess_page_title(&$variables) {
  $current_route = \Drupal::routeMatch()->getRouteName();
  $title = $variables['title'];
  $pattern = '/view.\w*search.\w*search_page/';

  if (preg_match($pattern, $current_route)) {
    if (preg_match('/\w*\b\s- search results/', $title)) {
      $new_title = strtok($title, ' -');
      $variables['title'] = t($new_title);
      $variables['title_subtitle'] = t('search results');
    }
  }
}
