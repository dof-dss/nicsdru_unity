<?php

/**
 * @file
 * Functions to support theming in the niauditoffice_theme theme.
 */

/**
 * Implements hook_theme_suggestions_views_view_alter().
 */
function niauditoffice_theme_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
  if (isset($variables['view']->element['#display_id'])) {
    $suggestions[] = 'views_view__' . $variables['view']->element['#display_id'];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function niauditoffice_theme_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  if (isset($variables['element']['#view_mode'])) {
    $suggestions[] = 'field__node__' . $variables['element']['#field_name'] . '__' . $variables['element']['#view_mode'];
  }
}

/**
 * Implements hook_preprocess_page().
 */
function niauditoffice_theme_preprocess_page(&$variables) {
  // Initially set the new variable for search pages to False.
  $variables['search_page'] = FALSE;
  // A list of search page titles on the Uregni site.
  $search_pages = [
    'News',
    'Publications',
    'Search',
  ];

  // If a search page set the variable to true.
  foreach ($search_pages as $search_page) {
    if ($variables['page']['#title'] == $search_page) {
      $variables['search_page'] = TRUE;
    }
  }
}

/**
 * Implements hook_theme_suggestions_views_view_unformatted_alter().
 */
function niauditoffice_theme_theme_suggestions_views_view_unformatted_alter(array &$suggestions, array $variables) {

  $search_pages = [
    'consultations_search_page',
    'publication_search_page',
    'news_page_search',
    'search_page',
  ];

  foreach ($search_pages as $search_page) {
    if ($variables['view']->element['#display_id'] == $search_page) {
      $suggestions[] = 'views_view_unformatted__search_result_page';
    }
  }
}

/**
 * Implements hook_preprocess_block().
 */
function niauditoffice_theme_preprocess_block(&$variables) {
  // Check if the block is an exposed filter block.
  if ($variables['base_plugin_id'] == 'views_exposed_filter_block') {
    // Add search page name ensuring they are in the exposed block machine name.
    $search_pages = [
      'news',
    ];

    $plugin_id = $variables['plugin_id'];

    foreach ($search_pages as $search_page) {
      // Search the machine name for search page name and set variable to this.
      if (str_contains($plugin_id, $search_page)) {
        $variables['search_page_name'] = $search_page;
      }
    }
  }
}
