<?php

/**
 * @file
 * Functions to support theming in the niauditoffice_theme theme.
 */

use Drupal\block\Entity\Block;
use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess_node().
 */
function niauditoffice_theme_preprocess_node(array &$variables) {
  // Only use this code for publications content type.
  if ($variables['node']->bundle() === 'publication_page') {
    $variables['work_in_progress'] = FALSE;

    // Retrieve 'Work in progress' taxonomy term tid.
    $wip_term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties(['name' => "Work in Progress"]);
    if (!empty($wip_term)) {
      $wip_tid = reset($wip_term)->id();

      // Check the type of the current publication to see if it
      // is 'Work in progress'.
      $topic = $variables['node']->get('field_publication_topic');
      if (!empty($topic)) {
        $topic_tid = $topic->getValue('tid')[0]['target_id'];
        if (isset($topic_tid) && ($topic_tid == $wip_tid)) {
            $variables['work_in_progress'] = TRUE;
        }
      }
    }
  }
}

/**
 * Implements hook_theme_suggestions_views_view_alter().
 */
function niauditoffice_theme_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
  if (!empty($variables['view']->element['#display_id'])) {
    $suggestions[] = 'views_view__' . $variables['view']->element['#display_id'];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function niauditoffice_theme_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  if (!empty($variables['element']['#view_mode'])) {
    $suggestions[] = 'field__node__' . $variables['element']['#field_name'] . '__' . $variables['element']['#view_mode'];
  }
}

/**
 * Implements hook_theme_suggestions_views_view_unformatted_alter().
 */
function niauditoffice_theme_theme_suggestions_views_view_unformatted_alter(array &$suggestions, array $variables) {

  $search_pages = [
    'publication_search_page',
    'news_search_page',
    'search_page',
  ];

  foreach ($search_pages as $search_page) {
    if ($variables['view']->element['#display_id'] == $search_page) {
      $suggestions[] = 'views_view_unformatted__search_result_page';
    }
  }
}

/**
 * Implements hook_preprocess_block().
 *
 * Pass block region value to content so this can be used in
 * niauditoffice_theme_theme_suggestions_menu_alter.
 */
function niauditoffice_theme_preprocess_block(&$variables) {
  if (!empty($variables['elements']['#id'])) {
    $region = Block::load($variables['elements']['#id'])->getRegion();
    $variables['content']['#attributes']['region'] = $region;
  }
}

/**
 * Implements hook_theme_suggestions_menu_alter().
 *
 * Provide region based menu suggestions.
 */
function niauditoffice_theme_theme_suggestions_menu_alter(&$suggestions, array $variables) {
  if (!empty($variables['attributes']['region'])) {
    $suggestions[] = 'menu__' . $variables['menu_name'] . '__' . $variables['attributes']['region'];
  }
}

/**
 * Implements hook_preprocess_form().
 */
function niauditoffice_theme_preprocess_form(array &$variables) {
  switch ($variables['element']['#id']) {
    case "views-exposed-form-publications-search-publication-search-page":
    case "views-exposed-form-news-search-news-search-page":
      $variables['attributes']['class'][] = Html::cleanCssIdentifier('search-form');
      $variables['attributes']['class'][] = Html::cleanCssIdentifier('search-form--page');
      break;
  }
}
