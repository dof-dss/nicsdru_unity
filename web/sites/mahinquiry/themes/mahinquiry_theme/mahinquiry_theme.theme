<?php

/**
 * @file
 * Functions to support theming in the mahinquiry_theme theme.
 */

use Drupal\block\Entity\Block;
use Drupal\Component\Utility\Html;

/**
 * Implements template_preprocess_views_view().
 */
function mahinquiry_theme_preprocess_views_view(array &$variables) {
  $view = $variables['view'];

  switch ($view->storage->id()) {
    case 'latest_news':
      if ($view->current_display == 'home_latest_news') {
        $variables['more']['#options']['attributes']['class'] = 'btn';
      }
  }
}

/**
 * Implements hook_preprocess_html().
 */
function mahinquiry_theme_preprocess_html(&$variables) {
  if (!empty($variables['node_type'])) {
    if ($variables['node_type'] == 'publication') {
      $variables['attributes']['class'][] = 'one-sidebar';
      $variables['attributes']['class'][] = 'sidebar-second';
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function mahinquiry_theme_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  if (!empty($variables['element']['#view_mode'])) {
    $suggestions[] = 'field__node__' . $variables['element']['#field_name'] . '__' . $variables['element']['#view_mode'];
  }
}

/**
 * Implements hook_preprocess_page().
 */
function mahinquiry_theme_preprocess_page(&$variables) {
  // Initially set the new variable for search pages to False.
  $variables['search_page'] = FALSE;
  // A list of search page titles on the mahinquiry site.
  $search_pages = [
    'News',
    'Publications',
    'Search',
  ];

  // If a search page set the variable to true.
  foreach ($search_pages as $search_page) {
    if ($variables['page']['#title'] == $search_page) {
      $variables['search_page'] = TRUE;
    }
  }
}

/**
 * Implements hook_theme_suggestions_views_view_unformatted_alter().
 */
function mahinquiry_theme_theme_suggestions_views_view_unformatted_alter(array &$suggestions, array $variables) {

  $search_pages = [
    'publications_search_page',
    'news_search_page',
    'search_page',
  ];

  foreach ($search_pages as $search_page) {
    if ($variables['view']->element['#display_id'] == $search_page) {
      $suggestions[] = 'views_view_unformatted__search_result_page';
    }
  }
}

/**
 * Implements hook_preprocess_form().
 */
function mahinquiry_theme_preprocess_form(array &$variables) {
  switch ($variables['element']['#id']) {
    case "views-exposed-form-publications-search-publication-search-page":
    case "views-exposed-form-news-search-news-search-page":
      $variables['attributes']['class'][] = Html::cleanCssIdentifier('search-form');
      $variables['attributes']['class'][] = Html::cleanCssIdentifier('search-form--page');
      break;
  }
}

/**
 * Implements hook_preprocess_block().
 *
 * Pass block region value to content so this can be used in
 * mahinquiry_theme_theme_suggestions_menu_alter.
 */
function mahinquiry_theme_preprocess_block(&$variables) {
  if (!empty($variables['elements']['#id'])) {
    $region = Block::load($variables['elements']['#id'])->getRegion();
    $variables['content']['#attributes']['region'] = $region;
  }

  // Check if the block is an exposed filter block.
  if ($variables['base_plugin_id'] == 'views_exposed_filter_block') {
    // Add search page name ensuring they are in the exposed block machine name.
    $search_pages = [
      'news',
      'publications',
    ];

    $plugin_id = $variables['plugin_id'];

    foreach ($search_pages as $search_page) {
      // Search the machine name for search page name and set variable to this.
      if (preg_match("/{$search_page}/i", $plugin_id)) {
        $variables['search_page_name'] = $search_page;
      }
    }
  }
}

/**
 * Implements hook_theme_suggestions_menu_alter().
 *
 * Provide region based menu suggestions.
 */
function mahinquiry_theme_theme_suggestions_menu_alter(&$suggestions, array $variables) {
  if (!empty($variables['attributes']['region'])) {
    $suggestions[] = 'menu__' . $variables['menu_name'] . '__' . $variables['attributes']['region'];
  }
}
